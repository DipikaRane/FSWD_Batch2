MongoDB is a database
It is no sql database
It helps to save unstructured data

example ::  I am saving a student data
|Roll No. | Hindi | English| Computer |
|    1    |    50 | 60     |    90    |
|    2    |    40 |        |          |
|    3    |       | 49     |          |
|    4    |       |        |    56    |

& spaces get wastes here

But MongoDB will save these data not wasting spaces
By creating JSON object saves database

[
    {
        "Roll_No.":1,
        "Hindi":50,
        "English":60,
        "Computer":90
    },
    {
        "Roll_No.":2,
        "Hindi":40,
    },
    {
        "Roll_No.":3,
        "English":49
    },
    {
        "Roll_NO.":4,
        "Computer":56
    }
]

terminology sql vs no sql
database --- database  // right side terms are for mongodb
table --- collection
row ---- document
select ---- find
insert/create ---- insert
update ---- update
delete --- remove

###windows####
===> local setup of mongodb

1. download & install MongoDB
2. create a folder by name  "Data" in C drive
3. In Data folder create one folder called "db"

>>>Steps to start mongodb server
1. open cmd
2. go inside the MongoDB folder in C drive
3. go to the path C:\Program Files\MongoDB\Server\5.0\bin
4. copy this path and cd C:\Program Files\MongoDB\Server\5.0\bin
5. after getting path type mongod
6. it will mongodb server on port:27017

>>> Steps to mongodb client
1. open cmd
2. go inside the MongoDB folder in C drive
3. go to the path C:\Program Files\MongoDB\Server\5.0\bin
4. copy this path and cd C:\Program Files\MongoDB\Server\5.0\bin
5. after getting path type mongo
6. it will mongodb client


####MONGODB COMMANDS###
1. to see the database
show dbs
2. to create/use the database
use database_name
use Swiggy

3. to see/get the collection from a database
show collections
restuarant

By creating a new db
> use SwiggyFood  //new db
switched to db SwiggyFood

4. to create collection in db 
db.collection_name.insert(key:"value")
> db.restData.insert({"id":1,"Name":"Radison Blue","City":"New Delhi"}) /// collection in db
WriteResult({ "nInserted" : 1 })

5. to see the data from collection
db.collection_name.find()
{ "_id" : ObjectId("62db8849df5f928d3bba891d"), "id" : 1, "Name" : "Radison Blue", "City" : "New Delhi" }

6. using pretty() to see data 
db .collection_name.find().pretty()
{
        "_id" : ObjectId("62db8849df5f928d3bba891d"),
        "id" : 1,
        "Name" : "Radison Blue",
        "City" : "New Delhi"
}

>>>> here one ObjectId is generated by mongodb
>>>> this objectId is unique for each collection
>>> 12byte string
---4 bytes >> timestamped
---5 bytes random value
---3 byte counter

7. adding multiple records in one collection
db.collection_name.insertMany([{},{},{}])
> db.shirtData.insertMany([
...     {
...         "_id":1,
...         "shirt_name":"Black Denninm Shirt",
...         "size":"36-L",
...         "price":1000,
...         "shopname":"Kapsons",
...         "image":"https://i.ibb.co/1sxZ9Cq/home.png"
...     },
...     {
...         "_id":2,
...         "shirt_name":"Sky Blue Denninm Shirt",
...         "size":"34-L",
...         "price":1100,
...         "shopname":"WestSide"
...     },
...     {
...         "_id":3,
...         "shirt_name":"Blue Denninm Shirt",
...         "size":"36-M",
...         "price":1000,
...         "shopname":"Kapsons"
...     }
... ])

{ "acknowledged" : true, "insertedIds" : [ 1, 2, 3 ] }

8. to update any documents in the collection
db.collection_name.update({key:"value"},{$set:{key:"value"}})
>>> second key:value is that to be updated
db.shirtData.update({shirt_name:"Blue Denninm Shirt"},{$set:{price:1200}})

> db.restData.update({_id:1},{})              // remove all info from document
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.restData.find().pretty()
{
        "_id" : ObjectId("62db8849df5f928d3bba891d"),
        "id" : 1,
        "Name" : "Radison Blue",
        "City" : "New Delhi"
}
{ "_id" : 1 }

9. to remove/delete collection from db
db.collection_name.drop()


C - CREATE (INSERT) (POST)
R - READ  (FIND)  (GET)
U - UPDATE (UPDATE) (PUT)
D - DELETE (REMOVE) (DELETE)

